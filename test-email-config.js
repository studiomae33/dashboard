#!/usr/bin/env node

/**
 * Script de test pour v√©rifier la configuration des emails
 * Usage: node test-email-config.js
 */

const { PrismaClient } = require('@prisma/client');

async function testEmailConfiguration() {
  const prisma = new PrismaClient();
  
  try {
    console.log('üîç V√©rification de la configuration email...\n');
    
    // R√©cup√©rer les param√®tres
    const settings = await prisma.settings.findUnique({
      where: { id: 'singleton' }
    });
    
    if (!settings) {
      console.error('‚ùå Aucune configuration trouv√©e !');
      return;
    }
    
    console.log('üìß Configuration actuelle :');
    console.log(`   Nom du studio : ${settings.studioName}`);
    console.log(`   Email exp√©diteur : ${settings.senderEmail}`);
    console.log(`   Email studio : ${settings.studioEmail}`);
    console.log(`   T√©l√©phone : ${settings.studioPhone}`);
    console.log(`   Adresse : ${settings.studioAddress}`);
    
    console.log('\nüì© Configuration des emails :');
    console.log(`   FROM: ${settings.studioName} <${settings.senderEmail}>`);
    console.log(`   REPLY-TO: ${settings.studioEmail}`);
    
    // V√©rifications
    const issues = [];
    
    if (!settings.senderEmail) {
      issues.push('‚ùå Email exp√©diteur manquant');
    }
    
    if (!settings.studioEmail) {
      issues.push('‚ùå Email studio manquant');
    }
    
    if (settings.senderEmail === settings.studioEmail) {
      issues.push('‚ö†Ô∏è  Email exp√©diteur et studio sont identiques');
    }
    
    if (!settings.studioName) {
      issues.push('‚ùå Nom du studio manquant');
    }
    
    if (issues.length === 0) {
      console.log('\n‚úÖ Configuration email correcte !');
      console.log('\nüìã Comportement attendu :');
      console.log('   ‚Ä¢ Les emails sont envoy√©s depuis devis@mail.studiomae.fr');
      console.log('   ‚Ä¢ Les r√©ponses sont redirig√©es vers contact@studiomae.fr');
      console.log('   ‚Ä¢ Les clients voient une note les invitant √† r√©pondre directement');
    } else {
      console.log('\n‚ö†Ô∏è  Probl√®mes d√©tect√©s :');
      issues.forEach(issue => console.log(`   ${issue}`));
    }
    
  } catch (error) {
    console.error('‚ùå Erreur lors du test :', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

// Ex√©cuter le test
testEmailConfiguration().catch(console.error);
